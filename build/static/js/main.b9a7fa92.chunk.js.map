{"version":3,"sources":["components/edit-div/index.js","components/html-div/index.js","utility/validate-text-length.js","utility/clean-up-html.js","components/notes-manage/form-view.js","components/notes-manage/index.js","utility/text.js","components/notes-list/note-view.js","components/notes-list/index.js","components/note-detail/note-detail-view.js","components/note-detail/index.js","services/local.storage.services.js","services/data.source.js","components/headline-button-screen/index.js","App.js","reportWebVitals.js","index.js"],"names":["EditDiv","props","className","ref","fieldRef","contentEditable","id","onInput","changeEv","onFocus","onKeyUp","percentChar","countChar","style","HTMLDiv","createRange","node","chars","range","document","selectNode","setStart","count","setEnd","nodeType","Node","TEXT_NODE","textContent","length","lp","childNodes","setCurrentCursorPosition","selection","window","getSelection","collapse","removeAllRanges","addRange","validateTextLength","e","field","limit","html","innerText","percent","pos","parent","charCount","focusNode","parentNode","isChildOf","focusOffset","previousSibling","getCurrentCursorPosition","start","slice","overlimit","current","innerHTML","valid","Element","prototype","removeAttributes","attrs","forEach","attr","removeAttribute","cleanUpHTML","el","tags","querySelectorAll","remove","position","Form","useState","loading","setLoading","title","setTitle","content","setContent","editMode","setEditMode","setCountChar","setPercentChar","titleRef","useRef","contentRef","resetForm","focus","saveNote","preventDefault","hasNoteIndex","notes","findIndex","obj","save","Date","now","error","console","log","useEffect","note","filter","Box","component","noValidate","autoComplete","sx","mt","maxWidth","m","width","onSubmit","Typography","variant","gutterBottom","mb","result","target","Stack","direction","spacing","justifyContent","Button","color","startIcon","onClick","cancel","LoadingButton","loadingPosition","disabled","NotesManage","this","React","truncate","str","substring","NotePreview","data","Card","open","CardActionArea","CardContent","dangerouslySetInnerHTML","__html","replace","CardActions","IconButton","event","edit","delete","NoteList","display","alignItems","flexDirection","pr","minWidth","map","i","Note","anchorEl","setAnchorEl","top","left","positionPopup","setPositionPopup","a","addEventListener","alertLink","removeEventListener","handleClose","Boolean","undefined","setAttribute","getAttribute","getBoundingClientRect","y","height","x","flexGrow","Popover","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onClose","p","size","NoteDetail","getLocalStorage","key","defaultValue","localStorage","getItem","JSON","parse","getNotesDS","setNotesDS","setItem","stringify","HeadlineButtonScreen","textAlign","headline","create","App","state","isEmpty","previewMode","bind","updateList","setState","index","stopPropagation","openNote","find","Container","overflow","Fab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b9a7fa92.chunk.js","sourcesContent":["import * as PropTypes from \"prop-types\";\n\nconst EditDiv = (props) => {\n    return (\n        <div className={'MuiFormControl-root MuiTextField-root editable-field'}>\n            <label className={\"MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-standard MuiFormLabel-root MuiFormLabel-colorSecondary \"}>\n                Title\n            </label>\n            <div ref={props.fieldRef}\n                 className=\"text-field\"\n                 contentEditable={\"plaintext-only\"}\n                 id={\"editfield\"}\n                 onInput={props.changeEv}\n                 onFocus={props.changeEv}\n                 onKeyUp={props.changeEv}\n            ></div>\n            {props.percentChar!==0 &&\n            <div className=\"characters\">\n                <div className={props.countChar >= 0 ? \"circle-wrap\" : \"circle-red circle-wrap\"} style={{\"--deg\": props.percentChar}}>\n                    <div className=\"circle\">\n                        <div className=\"mask full\">\n                            <div className=\"fill\"> </div>\n                        </div>\n                        <div className=\"mask half\">\n                            <div className=\"fill\"> </div>\n                        </div>\n                        <div className=\"inside-circle\">{props.countChar<10 && <span className={props.countChar >= 0 ? \"text-orange\" : \"text-red\"}>{props.countChar} </span> }\n                        </div>\n                    </div>\n                </div>\n            </div>}\n        </div>\n    );\n}\nEditDiv.propTypes = {\n    percentChar: PropTypes.number,\n    fieldRef: PropTypes.any,\n    changeEv: PropTypes.func,\n    countChar: PropTypes.number\n};\nexport default EditDiv;","import * as PropTypes from \"prop-types\";\nconst HTMLDiv = (props) => {\n    return (\n        <div className={'MuiFormControl-root MuiTextField-root editable-field'}>\n            <label className={\"MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-standard MuiFormLabel-root MuiFormLabel-colorSecondary \"}>\n                Content\n            </label>\n            <div ref={props.fieldRef}\n                 className=\"text-field html-field\"\n                 contentEditable\n                 onInput={props.changeEv}\n                 onFocus={props.changeEv}\n                 onKeyUp={props.changeEv}\n            ></div>\n        </div>\n    );\n}\n\nHTMLDiv.propTypes = {\n    ref: PropTypes.any,\n    changeEv: PropTypes.any\n};\nexport default HTMLDiv;","function createRange(node, chars, range) {\n    if (!range) {\n        range = document.createRange()\n        range.selectNode(node);\n        range.setStart(node, 0);\n    }\n\n    if (chars.count === 0) {\n        range.setEnd(node, chars.count);\n    } else if (node && chars.count > 0) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            if (node.textContent.length < chars.count) {\n                chars.count -= node.textContent.length;\n            } else {\n                range.setEnd(node, chars.count);\n                chars.count = 0;\n            }\n        } else {\n            for (let lp = 0; lp < node.childNodes.length; lp++) {\n                range = createRange(node.childNodes[lp], chars, range);\n                if (chars.count === 0) break;\n            }\n        }\n    }\n\n    return range;\n}\nfunction setCurrentCursorPosition(node, chars) {\n    if (chars >= 0) {\n        let selection = window.getSelection();\n        let range = createRange(node, { count: chars });\n\n        if (range) {\n            range.collapse(false);\n            selection.removeAllRanges();\n            selection.addRange(range);\n        }\n    }\n}\nfunction isChildOf(node, parent) {\n    while (node !== null) {\n        if (node.id === parent.id) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\nfunction getCurrentCursorPosition(parent) {\n    let selection = window.getSelection(),\n        charCount = -1,\n        node;\n\n    if (selection.focusNode && isChildOf(selection.focusNode, parent)) {\n        node = selection.focusNode;\n        charCount = selection.focusOffset;\n        while (node) {\n            if (node.id === parent.id) {\n                break;\n            }\n\n            if (node.previousSibling) {\n                node = node.previousSibling;\n                charCount += node.textContent.length;\n            } else {\n                node = node.parentNode;\n                if (node === null) {\n                    break\n                }\n            }\n        }\n    }\n\n    return charCount;\n}\n\nconst validateTextLength = (e, field, limit, ref)=>{\n    const html = field.innerText;\n\n    let count = limit - html.length;\n    let percent = html.length * 100 / limit;\n    let pos = getCurrentCursorPosition(field);\n    if (html.length > limit) {\n        let start = html.slice(0, limit);\n        let overlimit = html.slice(limit);\n        overlimit = `<span style=\"background:red; color:#ffffff\">${overlimit}</span>`;\n        ref.current.innerHTML = start + overlimit;\n        setCurrentCursorPosition(field, pos);\n    }\n    return {\n        valid: percent<=100,\n        count : count,\n        percent : percent<=100 ? percent : 100.1\n    }\n}\nexport default validateTextLength;","Element.prototype.removeAttributes = function(...attrs) {\n    attrs.forEach(attr => this.removeAttribute(attr))\n}\nfunction cleanUpHTML(el,tags){\n    el.querySelectorAll(tags).forEach((e)=>{\n        e.remove();\n    });\n    el.querySelectorAll('*').forEach((e) =>{\n        if(e.style.position === 'fixed'){\n            e.style.position = 'absolute'\n        }\n        e.removeAttributes('data-ga ','id', 'onclick','data-google-query-id','itemprop');\n    })\n}\nexport default cleanUpHTML;","import {Box, Button, Stack, Typography} from \"@mui/material\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { useState, useRef, useEffect} from \"react\";\nimport EditDiv from \"../edit-div\";\nimport HTMLDiv from \"../html-div\";\nimport validateTextLength from \"../../utility/validate-text-length\";\nimport cleanUpHTML from \"../../utility/clean-up-html\";\n\nconst Form = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [editMode, setEditMode] = useState(false);\n    const [countChar, setCountChar] = useState(0);\n    const [percentChar, setPercentChar] = useState(0);\n\n    let titleRef = useRef(null);\n    let contentRef = useRef(null);\n\n    useEffect(()=>{\n        if (!props.id) {\n            resetForm();\n        }\n        if (props.id && props.id !== editMode) {\n            setEditMode(props.id);\n        }\n    },[props.id]);\n\n    useEffect(()=>{\n        if (props.id && editMode && props.id === editMode) {\n            const note = props.notes.filter(note => note.id === props.id)[0];\n            setContent(note.content);\n            setTitle(note.title);\n            titleRef.current.innerHTML = note.title;\n            contentRef.current.innerHTML = note.content;\n            titleRef.current.focus();\n        }\n    },[editMode]);\n\n    function resetForm(){\n        setEditMode(false);\n        setLoading(false);\n        setContent('');\n        setTitle('');\n        titleRef.current.innerHTML = '';\n        contentRef.current.innerHTML = '';\n        titleRef.current.focus();\n        // titleRef.current.blur();\n    }\n    function saveNote(e) {\n        e.preventDefault();\n        if ((content !== \"\" || title !== \"\") && validateTextLength(e, titleRef.current,100, titleRef).valid) {\n            setLoading(true);\n            try {\n                const hasNoteIndex = props.notes.findIndex((obj => obj.id === editMode));\n                props.save({\n                        id: hasNoteIndex!==-1 ? editMode : Date.now(),\n                        title: title || \"No name\",\n                        content: content || \"empty\"\n                    }, hasNoteIndex);\n\n                resetForm();\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    if (props.id && !editMode && props.id !== editMode){\n        setEditMode(props.id);\n    }\n    function changeTitle(e){\n        const result = validateTextLength(e, e.target,100, titleRef);\n        setCountChar(result.count);\n        setPercentChar(result.percent);\n        setTitle(e.target.innerText);\n    }\n    function changeContent(e){\n        cleanUpHTML(e.target,'iframe, script, noscript, frame, form, input, textarea');\n        setContent(e.target.innerHTML);\n    }\n\n    return (\n        <Box\n            component=\"form\"\n            noValidate\n            autoComplete=\"off\"\n            sx={{\n                mt: 10,\n                maxWidth: 600,\n                '& .MuiTextField-root': { m: 1, width: '100%' },\n            }}\n            onSubmit={saveNote}\n        >\n            <Typography\n                variant=\"h4\"\n                component=\"div\"\n                gutterBottom\n                className={\"fi=orm-title\"}\n                sx={{ mb: 5}}>\n                {!editMode ? \"New Note\" : \"Edit Note\"}\n            </Typography>\n            <EditDiv\n                changeEv = {changeTitle}\n                countChar = {countChar}\n                percentChar = {percentChar}\n                fieldRef = {titleRef}\n            />\n            <HTMLDiv\n                changeEv = {changeContent}\n                fieldRef = {contentRef}\n            />\n            <Stack direction=\"row\" spacing={4} sx={{\n                mt: 3,\n                justifyContent:'flex-end'\n            }}>\n                <Button aria-label=\"cancel\" variant=\"text\" color=\"secondary\" startIcon={<CancelIcon />} onClick={props.cancel}>\n                    Cancel\n                </Button>\n                <LoadingButton\n                    color=\"secondary\"\n                    onClick={saveNote}\n                    loading={loading}\n                    loadingPosition=\"start\"\n                    startIcon={<CheckIcon />}\n                    variant=\"contained\"\n                    disabled={((content === \"\" && title === \"\") || percentChar>100)}\n                >\n                    Save\n                </LoadingButton>\n            </Stack>\n        </Box>\n    );\n}\nexport default Form;","import * as React from 'react';\nimport Form from \"./form-view\";\nexport default class NotesManage extends React.Component {\n    render() {\n        return (\n            <Form id={this.props.id} cancel={this.props.cancel} notes={this.props.notes} save={this.props.save}/>\n        );\n    }\n}","export function truncate(str, limit) {\n    return str.length > limit ? str.substring(0, limit-1) + \"...\" : str;\n}\nexport function plainText(str) {\n    const regex = /(<([^>]+)>)/ig;\n    return str.replace(regex, '');\n}","import {Card, CardActionArea,CardActions, CardContent, Typography} from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport * as React from \"react\";\nimport {plainText, truncate} from \"../../utility/text\";\n\nconst NotePreview = (props) => {\n    const {title, content, id} = props.data;\n\n    return(\n    <Card className={\"notes-item\"} sx={{ maxWidth: 345 }} onClick={()=>props.open(id)}>\n        <CardActionArea component={\"div\"}>\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"div\"  className={\"notes-title\"}>\n                    {title}\n                </Typography>\n                <Typography\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                    className={\"notes-description\"}\n                    dangerouslySetInnerHTML={{__html:truncate(plainText(content), 200)}}\n                >\n                </Typography>\n            </CardContent>\n            <CardActions  className={\"notes-btns\"}>\n                <IconButton aria-label=\"edit\" color=\"primary\" onClick={(event)=>props.edit(event, id)}>\n                    <EditIcon />\n                </IconButton>\n                <IconButton aria-label=\"delete\" color=\"primary\" onClick={(event)=>props.delete(event, id)}>\n                    <DeleteIcon />\n                </IconButton>\n            </CardActions>\n        </CardActionArea>\n    </Card>\n    )\n}\nexport default NotePreview;","import {Box} from \"@mui/material\";\nimport * as React from \"react\";\nimport NotePreview from \"./note-view\";\n\n\nconst NoteList = (props) => {\n    const notes = props.notes || [];\n\n    return (\n        <Box sx={{\n            display: 'flex',\n            alignItems: 'flex-start',\n            flexDirection: 'column',\n            mt: 10,\n            pr:5,\n            minWidth:'fit-content'\n        }}>\n            {notes.map((note, i) =>\n                <NotePreview data={note} key={i} delete={props.delete} edit={props.edit} open={props.open}/>\n            )}\n        </Box>\n    )\n\n}\nexport default NoteList;","import {Box, Typography, Popover, Button} from \"@mui/material\";\nimport * as PropTypes from \"prop-types\";\nimport {useEffect, useRef, useState} from \"react\";\n\nconst Note = (props) => {\n    const {title, content} = props.data;\n    const contentRef = useRef(null);\n    const [anchorEl, setAnchorEl] = useState('');\n    const [positionPopup, setPositionPopup] = useState({top:0, left:0});\n\n    useEffect(()=>{\n        const links = contentRef.current.querySelectorAll('a');\n        links.forEach((a)=>{\n            a.addEventListener('click', alertLink)\n        })\n        return () => {\n            window.removeEventListener('click', alertLink)\n        }\n    },[props.data]);\n\n    useEffect(()=>{},[anchorEl]);\n\n    const handleClose = () => {\n        setAnchorEl('');\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const alertLink = event =>{\n        event.preventDefault();\n        event.target.setAttribute('aria-describedby',id);\n        setAnchorEl(event.target.getAttribute('href'));\n        setPositionPopup({\n            top:  event?.target?.getBoundingClientRect().y + event?.target?.getBoundingClientRect().height,\n            left: event?.target?.getBoundingClientRect().x\n        });\n    }\n    function openLink(){\n        if (anchorEl) {\n            window.open(anchorEl);\n        }\n        handleClose();\n    }\n    return (\n    <Box component=\"div\" className={\"notes-preview\"} sx={{mt: 10, flexGrow:1, width:'100%'}}>\n        <Typography variant=\"h4\" gutterBottom component=\"div\" className={\"notes-title\"}>{title}</Typography>\n        <Box component=\"div\">\n            <Typography ref={contentRef} variant=\"body2\" gutterBottom className={\"notes-description\"}\n                        dangerouslySetInnerHTML={{__html:content}}>\n            </Typography>\n            <Popover\n                anchorReference=\"anchorPosition\"\n                anchorPosition={{ top: positionPopup.top, left: positionPopup.left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                onClose={handleClose}\n                id={id}\n                open={open}\n            >\n                <Typography variant=\"body3\" sx={{p:1}}>Open the link in a new tab?</Typography>\n                <Button onClick={handleClose} size={'small'}>No</Button>\n                <Button onClick={openLink} size={'small'}>Yes</Button>\n            </Popover>\n        </Box>\n    </Box>\n    );\n}\nNote.propTypes = {\n    data: PropTypes.object\n}\nexport default Note;","import * as React from \"react\";\nimport Note from \"./note-detail-view\";\nimport * as PropTypes from \"prop-types\";\n\nconst NoteDetail = (props) => {\n    return <Note data={props.note}/>\n}\n\nNoteDetail.propTypes = {\n    data: PropTypes.object\n}\nexport default NoteDetail;","import { useState, useEffect } from \"react\";\n\nexport const getLocalStorage = (key, defaultValue) => {\n    const data = localStorage.getItem(key);\n    const initial = JSON.parse(data);\n    return initial || defaultValue;\n};\n\nexport const useLocalStorage = (key, defaultValue) => {\n    const [value, setValue] = useState(() => {\n        return getLocalStorage(key, defaultValue);\n    });\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n\n    return [value, setValue];\n};\n\n","import {getLocalStorage} from \"./local.storage.services\";\n\nconst getNotesDS = getLocalStorage(\"list\", []);\nconst setNotesDS = (notes)=>localStorage.setItem('list', JSON.stringify(notes));\n\nexport {getNotesDS, setNotesDS};","import {Box, Button, Typography} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nconst HeadlineButtonScreen = (props) => {\n    return (\n        <Box className={'fullscreen-container'} sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            p: 1,\n            m: 1\n        }}>\n            <Typography\n                variant=\"h2\"\n                component=\"h1\"\n                gutterBottom\n                className={\"notes-title\"}\n                sx={{textAlign: 'center', mb: 10}}\n                dangerouslySetInnerHTML={{__html:props.headline}}\n            >\n            </Typography>\n            <Button\n                aria-label=\"Create\"\n                variant=\"contained\"\n                color=\"secondary\"\n                startIcon={<AddIcon/>}\n                size=\"large\"\n                onClick={props.create}\n            >\n                Create note\n            </Button>\n        </Box>\n    )\n}\nHeadlineButtonScreen.propTypes = {\n    create : PropTypes.func,\n    headline: PropTypes.string\n}\nexport default HeadlineButtonScreen;","import * as React from 'react';\nimport './App.css';\nimport {Box, Fab} from '@mui/material';\nimport Container from '@mui/material/Container';\nimport AddIcon from '@mui/icons-material/Add';\nimport NotesManage from \"./components/notes-manage\";\nimport NoteList from \"./components/notes-list\";\nimport NoteDetail from \"./components/note-detail\";\nimport {getNotesDS, setNotesDS} from \"./services/data.source\";\nimport HeadlineButtonScreen from \"./components/headline-button-screen\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes: getNotesDS,\n            isEmpty: !getNotesDS.length,\n            previewMode: getNotesDS.length>0,\n            editMode: false,\n            id: false\n        }\n        this.create = this.create.bind(this);\n        this.cancel = this.cancel.bind(this);\n        this.updateList = this.updateList.bind(this);\n        this.delete = this.delete.bind(this);\n        this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        this.open = this.open.bind(this);\n    }\n    create() {\n        this.setState({\n            isEmpty: false,\n            editMode: true,\n            id: false,\n            previewMode: false\n        });\n    }\n    cancel() {\n        this.setState({\n            isEmpty: true,\n            editMode: false,\n            previewMode: true,\n            id: false\n        });\n    }\n    updateList(notes) {\n        this.setState({\n            notes: notes,\n            id: false\n        });\n    }\n    save(note, index) {\n        let notes = this.state.notes;\n        if (index >= 0){\n            notes[index] = note;\n        }else{\n            notes = [ ...notes, note]\n        }\n        setNotesDS(notes);\n        this.updateList(notes);\n    }\n    delete(event, id){\n        event.stopPropagation();\n        const notes = this.state.notes.filter(note => note.id !== id)\n        setNotesDS(notes);\n        this.setState((state)=>({\n            notes: notes,\n            id: false,\n            editMode: !state.id,\n            previewMode: !!state.id\n        }));\n    }\n    edit(event, id){\n        event.stopPropagation();\n        this.setState({\n            editMode: true,\n            previewMode: false,\n            id: id\n        });\n    }\n    open(id){\n        this.setState({\n            editMode: false,\n            previewMode: true,\n            id: id\n        });\n    }\n    render() {\n        let openNote = {\n            title : 'Empty',\n            content : 'Choose a note to display.',\n        }\n        if (this.state.previewMode && this.state.id) {\n            openNote = this.state.notes.find(note => note.id === this.state.id);\n        }\n        return (\n            <div className=\"App\">\n                <Container maxWidth=\"lg\">\n                    {!this.state.notes.length && this.state.isEmpty  &&\n                        <HeadlineButtonScreen\n                            create={this.create}\n                            headline={\"Welcome! <br/> You can create your first note.\"}\n                        />\n                    }\n                    {(this.state.notes.length || !this.state.isEmpty) &&\n                        <Box sx={{display: 'flex', width:'100%'}}>\n                            <NoteList notes={this.state.notes} delete={this.delete} edit={this.edit} open={this.open}/>\n                            <Box component=\"div\" sx={{\n                                maxWidth:'100%',\n                                overflow:'hidden',\n                                width:'100%'\n                            }}>\n                                {((this.state.editMode || this.state.id) && !this.state.previewMode) &&\n                                    <Box component=\"div\" className={\"notes-create\"}\n                                         sx={{\n                                             mb: 10\n                                         }}>\n                                        <NotesManage\n                                            id={this.state.id}\n                                            cancel={this.cancel}\n                                            notes={this.state.notes}\n                                            save={this.save}\n                                        />\n                                    </Box>\n                                }\n                                {this.state.previewMode && <NoteDetail note={openNote}/>}\n                            </Box>\n                        </Box>\n                    }\n                </Container>\n                <div className={\"fixed-button\"}>\n                    <Fab color=\"secondary\" aria-label=\"add\" onClick={this.create}>\n                        <AddIcon/>\n                    </Fab>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}